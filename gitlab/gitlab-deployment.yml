apiVersion: apps/v1beta1
kind: Deployment
metadata:
    labels:
        k8s-app: gitlab
    name: gitlab
    namespace: gitlab
spec:
    strategy:
        rollingUpdate:
            maxSurge: 100%
            maxUnavailable: 100%
        type: RollingUpdate
    replicas: 1
    template:
        metadata:
          labels:
            k8s-app: gitlab
        spec:
            containers:
            - name: gitlab-ee
              image: gitlab/gitlab-ee
              imagePullPolicy: IfNotPresent
              #command: ["/bin/bash", "-c",
              #"sed -i \"s/environment ({'GITLAB_ROOT_PASSWORD' => initial_root_password }) if initial_root_password/environment ({'GITLAB_ROOT_PASSWORD' => initial_root_password})/g\" /opt/gitlab/embedded/cookbooks/gitlab/recipes/database_migrations.rb && exec /assets/wrapper"]
              env:
              - name: GITLAB_OMNIBUS_CONFIG
                valueFrom:
                    configMapKeyRef:
                        name: gitlab-config
                        key: gitlab_omnibus_config
              - name: GITLAB_ROOT_PASSWORD
                valueFrom:
                    secretKeyRef:
                        name: gitlab
                        key: gitlab-root-password
              - name: GITLAB_EE_LICENSE
                valueFrom:
                    secretKeyRef:
                        name: gitlab-license
                        key: license
              - name: DB_HOST
                value: postgres.gitlab
              - name: DB_DATABASE
                value: gitlab
              - name: DB_PASSWORD
                valueFrom:
                    secretKeyRef:
                        name: gitlab
                        key: DB_PASS
              - name: REDIS_HOST
                value: redis.gitlab
              - name: GITLAB_POST_RECONFIGURE_CODE
                value: |
                    include Gitlab::CurrentSettings

                    License.first_or_create(data: ENV['GITLAB_EE_LICENSE'])
                    Gitlab::CurrentSettings.current_application_settings.update_attribute(:health_check_access_token, 'PbQe3jsfm89ce8Lz')

              - name: GITLAB_POST_RECONFIGURE_SCRIPT
                value: |
                    /opt/gitlab/bin/gitlab-rails runner -e production "$GITLAB_POST_RECONFIGURE_CODE"
              ports:
              - name: ssh
                containerPort: 22
              - name: registry
                containerPort: 8105
              - name: workhorse
                containerPort: 8005
                #livenessProbe:
                #  httpGet:
                #      path: /help
                #      port: http
                #  initialDelaySeconds: 600
                #  timeoutSeconds: 1
                #  periodSeconds: 10
                #  successThreshold: 1
                #  failureThreshold: 10
                #readinessProbe:
                #rehttpGet:
                #re    path: /health_check?token=PbQe3jsfm89ce8Lz
                #re    port: 8005
                #reinitialDelaySeconds: 30
                #retimeoutSeconds: 1
                #reperiodSeconds: 10
                #resuccessThreshold: 1
                #refailureThreshold: 3
              volumeMounts:
              - name: gitlab-etc
                mountPath: /etc/gitlab
              - name: gitlab-data
                mountPath: /gitlab-data
              - name: gitlab-registry
                mountPath: /gitlab-registry
            volumes:
            - name: gitlab-etc
              persistentVolumeClaim:
                claimName: gitlab-etc
            - name: gitlab-data
              persistentVolumeClaim:
                claimName: gitlab-data
            - name: gitlab-registry
              persistentVolumeClaim:
                claimName: gitlab-registry
