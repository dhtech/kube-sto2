apiVersion: apps/v1beta1
kind: Deployment
metadata:
    labels:
        k8s-app: gitlab
    name: gitlab
    namespace: gitlab
spec:
    strategy:
        rollingUpdate:
            maxSurge: 100%
            maxUnavailable: 100%
        type: RollingUpdate
    replicas: 1
    template:
        metadata:
          labels:
            k8s-app: gitlab
        spec:
            containers:
            - name: gitlab-ee
              image: gitlab/gitlab-ee
              imagePullPolicy: IfNotPresent
              env:
              - name: GITLAB_OMNIBUS_CONFIG
                valueFrom:
                    configMapKeyRef:
                        name: gitlab-config
                        key: gitlab_omnibus_config
              - name: GITLAB_ROOT_PASSWORD
                valueFrom:
                    secretKeyRef:
                        name: gitlab
                        key: gitlab-root-password
              - name: GITLAB_HEALTH_TOKEN
                valueFrom:
                    secretKeyRef:
                        name: gitlab
                        key: health-token
              - name: GITLAB_EE_LICENSE
                valueFrom:
                    secretKeyRef:
                        name: gitlab-license
                        key: license
              - name: DB_HOST
                value: postgres.gitlab
              - name: DB_DATABASE
                value: gitlab
              - name: DB_PASSWORD
                valueFrom:
                    secretKeyRef:
                        name: gitlab
                        key: DB_PASS
              - name: REDIS_HOST
                value: redis.gitlab
              - name: GITLAB_POST_RECONFIGURE_CODE
                value: |
                    include Gitlab::CurrentSettings

                    License.first_or_create(data: ENV['GITLAB_EE_LICENSE'])
                    Gitlab::CurrentSettings.current_application_settings.update_attribute(:health_check_access_token, ENV['GITLAB_HEALTH_TOKEN'])

              - name: GITLAB_POST_RECONFIGURE_SCRIPT
                value: |
                    /opt/gitlab/bin/gitlab-rails runner -e production "$GITLAB_POST_RECONFIGURE_CODE"
              ports:
              - name: ssh
                containerPort: 22
              - name: registry
                containerPort: 8105
              - name: workhorse
                containerPort: 8005
              livenessProbe:
                exec:
                  command:
                    - /bin/sh
                    - -c
                    - "curl localhost:8005/-/liveness?token=${GITLAB_HEALTH_TOKEN}"
                initialDelaySeconds: 600
                timeoutSeconds: 1
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 10
              readinessProbe:
                exec:
                  command:
                    - /bin/sh
                    - -c
                    - "curl localhost:8005/-/readiness?token=${GITLAB_HEALTH_TOKEN}"
                initialDelaySeconds: 30
                timeoutSeconds: 1
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 3
              volumeMounts:
              - name: gitlab-etc
                mountPath: /etc/gitlab
              - name: gitlab-data
                mountPath: /gitlab-data
              - name: gitlab-registry
                mountPath: /gitlab-registry
            volumes:
            - name: gitlab-etc
              persistentVolumeClaim:
                claimName: gitlab-etc
            - name: gitlab-data
              persistentVolumeClaim:
                claimName: gitlab-data
            - name: gitlab-registry
              persistentVolumeClaim:
                claimName: gitlab-registry
